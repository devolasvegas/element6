"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _createFileNode=require("gatsby-source-filesystem/create-file-node"),_staticMap=_interopRequireDefault(require("./static-map"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){_defineProperty(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}async function sourceNodes({actions:a,createNodeId:b,createContentDigest:c,store:d,cache:e},f){delete f.plugins;const{createNode:g}=a,h=async a=>{const h=new _staticMap.default(a,e,d),{absolutePath:i,center:j,hash:k}=await h.getFilePath(f.key,f.secret),l=b(`google-maps-static-${k}`);return await(async a=>{const d=await(0,_createFileNode.createFileNode)(a.absolutePath,b,{});d.internal.description=`File "Google Maps Static Image of ${a.center} (Hash: ${a.hash})"`,d.hash=a.hash,d.parent=a.id,await g(_objectSpread({},d),{name:`gatsby-source-filesystem`});const e=JSON.stringify(a),f={children:[d.id],id:l,parent:null,internal:{content:e,contentDigest:c(a),type:`StaticMap`}},h=Object.assign({},a,f);await g(h)})({absolutePath:i,center:j,hash:k,id:l,mapUrl:h.url,nickname:a.nickname||l})},i=_objectSpread({},f);if(delete i.key,delete i.secret,f.maps){delete i.maps;for(const a of f.maps){const b=_objectSpread(_objectSpread({},i),a);await h(b)}}else await h(i)}var _default=sourceNodes;exports.default=_default;